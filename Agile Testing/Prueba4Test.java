// Generated by Selenium IDE

import org.junit.Test;

import org.junit.Before;

import org.junit.After;

import static org.junit.Assert.*;

import static org.hamcrest.CoreMatchers.is;

import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;

import org.openqa.selenium.WebDriver;

import org.openqa.selenium.firefox.FirefoxDriver;

import org.openqa.selenium.chrome.ChromeDriver;

import org.openqa.selenium.remote.RemoteWebDriver;

import org.openqa.selenium.remote.DesiredCapabilities;

import org.openqa.selenium.Dimension;

import org.openqa.selenium.WebElement;

import org.openqa.selenium.interactions.Actions;

import org.openqa.selenium.support.ui.ExpectedConditions;

import org.openqa.selenium.support.ui.WebDriverWait;

import org.openqa.selenium.JavascriptExecutor;

import org.openqa.selenium.Alert;

import org.openqa.selenium.Keys;

import java.util.*;

import java.net.MalformedURLException;

import java.net.URL;


public class Prueba4Test {

  private WebDriver driver;

  private Map<String, Object> vars;

  JavascriptExecutor js;


  @Before

  public void setUp() {

    driver = new ChromeDriver();

    js = (JavascriptExecutor) driver;

    vars = new HashMap<String, Object>();


  }


  @After

  public void tearDown() {
 
   driver.quit();


  }


  @Test

  public void prueba4() {
 
   // Test name: Prueba 4

    
// Step # | name | target | value
    // 1 | open | /login | 

    driver.get("http://travel.agileway.net/login");


    // 2 | setWindowSize | 1050x840 | 

    driver.manage().window().setSize(new Dimension(1050, 840));


    // 3 | click | id=username | 
 
   driver.findElement(By.id("username")).click();
 

   // 4 | type | id=username | agileway
 
   driver.findElement(By.id("username")).sendKeys("agileway");


    // 5 | click | id=password | 
  
  driver.findElement(By.id("password")).click();
 

   // 6 | type | id=password | testwise
  
  driver.findElement(By.id("password")).sendKeys("testwise");


    // 7 | click | name=commit | 
 
   driver.findElement(By.name("commit")).click();
 

   // 8 | click | css=input:nth-child(2) | 
 
   driver.findElement(By.cssSelector("input:nth-child(2)")).click();


    // 9 | click | name=fromPort | 
  
  driver.findElement(By.name("fromPort")).click();
 

   // 10 | select | name=fromPort | label=New York
 
   {
    
  WebElement dropdown = driver.findElement(By.name("fromPort"));
 
     dropdown.findElement(By.xpath("//option[. = 'New York']")).click();


    }
 

   // 11 | click | name=toPort | 
 
   driver.findElement(By.name("toPort")).click();
 

   // 12 | select | name=toPort | label=Sydney
  
  {
 
     WebElement dropdown = driver.findElement(By.name("toPort"));
 
     dropdown.findElement(By.xpath("//option[. = 'Sydney']")).click();


    }
  

  // 13 | click | id=departDay | 
  
  driver.findElement(By.id("departDay")).click();


    // 14 | select | id=departDay | label=07

   {
 
     WebElement dropdown = driver.findElement(By.id("departDay"));
 
     dropdown.findElement(By.xpath("//option[. = '07']")).click();


    }
 

   // 15 | click | id=departMonth | 
 
   driver.findElement(By.id("departMonth")).click();


    // 16 | select | id=departMonth | label=November 2023
 
   {
   
   WebElement dropdown = driver.findElement(By.id("departMonth"));
 
     dropdown.findElement(By.xpath("//option[. = 'November 2023']")).click();
 

   }
   

 // 17 | click | css=tr:nth-child(3) input | 

    driver.findElement(By.cssSelector("tr:nth-child(3) input")).click();
 

   // 18 | click | css=input:nth-child(9) | 
 
   driver.findElement(By.cssSelector("input:nth-child(9)")).click();
  

  // 19 | click | name=passengerFirstName | 
 
   driver.findElement(By.name("passengerFirstName")).click();
 

   // 20 | type | name=passengerFirstName | charles
  
  driver.findElement(By.name("passengerFirstName")).sendKeys("charles");


   // 21 | click | name=passengerLastName | 
  
  driver.findElement(By.name("passengerLastName")).click();
 

   // 22 | type | name=passengerLastName | chaplin
  
  driver.findElement(By.name("passengerLastName")).sendKeys("chaplin");
  

  // 23 | click | css=input:nth-child(5) | 
 
   driver.findElement(By.cssSelector("input:nth-child(5)")).click();
 

   // 24 | click | name=card_type | 
  
  driver.findElement(By.name("card_type")).click();
 

   // 25 | click | name=card_number | 
  
  driver.findElement(By.name("card_number")).click();
 

   // 26 | type | name=card_number | 000001234
 
   driver.findElement(By.name("card_number")).sendKeys("000001234");
 

   // 27 | click | name=expiry_month | 
  
 driver.findElement(By.name("expiry_month")).click();
 

   // 28 | select | name=expiry_month | label=06
 
   {
    
  WebElement dropdown = driver.findElement(By.name("expiry_month"));

      dropdown.findElement(By.xpath("//option[. = '06']")).click();


    }
 

   // 29 | click | name=expiry_year | 
 
   driver.findElement(By.name("expiry_year")).click();
 

   // 30 | select | name=expiry_year | label=2026
 
   {
 
     WebElement dropdown = driver.findElement(By.name("expiry_year"));
 
     dropdown.findElement(By.xpath("//option[. = '2026']")).click();
 

   }
 

   // 31 | click | css=p > input | 

    driver.findElement(By.cssSelector("p > input")).click();


    // 32 | click | id=container | 
 
   driver.findElement(By.id("container")).click();
 

   // 33 | click | linkText=Sign off | 

    driver.findElement(By.linkText("Sign off")).click();


    // 34 | close |  | 

    driver.close();

  }
}
